{
  "name": "tptpeditor",
  "displayName": "TPTP Editor",
  "publisher": "DE",
  "description": "Syntax highlighting, error detection, pretty-printing, and proving & processing theorems functions for TPTP language",
  "version": "0.1.4",
  "icon": "images/TPTPWorld.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/BananaApache/tptp_ide"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "main": "./client/out/extension",
  "contributes": {
    "languages": [
      {
        "id": "tptp",
        "aliases": ["tptp", "TPTP"],
        "extensions": [".p", ".s"],
        "configuration": "./language-configuration.json",
        "icon": {
          "light": "./images/TPTPWorld.svg",
          "dark": "./images/TPTPWorld.svg"
        }
      }
    ],
    "grammars": [{
      "language": "tptp",
      "scopeName": "source.tptp",
      "path": "./syntaxes/tptp.tmLanguage.json"
    }],
    "commands": [
      {
        "command": "tptp.formatDocument",
        "title": "TPTP: Format Document"
      },
      {
        "command": "tptp.prepareProblem",
        "title": "TPTP: Prepare Problem"
      },
      {
        "command": "tptp.formatProblem",
        "title": "TPTP: Format TPTP File"
      },
      {
        "command": "tptp.proveProblem",
        "title": "TPTP: Prove Problem"
      },
      {
        "command": "tptp.proveProblemMultiple",
        "title": "TPTP: Prove Problem Using Multiple Provers"
      },
      {
        "command": "tptp.processSolution",
        "title": "TPTP: Process Solution"
      },
      {
        "command": "tptp.processSolutionMultiple",
        "title": "TPTP: Process Solution Using Multiple Processors"
      },
      {
        "command": "tptp.importProblem",
        "title": "TPTP: Import TPTP Problem"
      },
      {
        "command": "tptp.importSolution",
        "title": "TPTP: Import TPTP Solution"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "tptp.formatDocument",
          "when": "editorLangId == tptp",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "tptp.prepareProblem",
          "when": "editorLangId == tptp",
          "group": "navigation"
        },
        {
          "command": "tptp.formatProblem",
          "when": "editorLangId == tptp",
          "group": "navigation"
        },
        {
          "command": "tptp.proveProblem",
          "when": "resourceExtname == .p",
          "group": "navigation"
        },
        {
          "command": "tptp.proveProblemMultiple",
          "when": "resourceExtname == .p",
          "group": "navigation"
        },
        {
          "command": "tptp.processSolution",
          "when": "resourceExtname == .s",
          "group": "navigation"
        },
        {
          "command": "tptp.processSolutionMultiple",
          "when": "resourceExtname == .s",
          "group": "navigation"
        },
        {
          "command": "tptp.importProblem",
          "group": "navigation"
        },
        {
          "command": "tptp.importSolution",
          "group": "navigation"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "TPTP Language Server Configuration",
      "properties": {
        "tptpLanguageServer.maxNumberOfProblems": {
          "scope": "resource",
          "type": "number",
          "default": 100,
          "description": "Controls the maximum number of problems produced by the server."
        },
        "tptpLanguageServer.trace.server": {
          "scope": "window",
          "type": "string",
          "enum": [
            "off",
            "messages",
            "verbose"
          ],
          "default": "off",
          "description": "Traces the communication between VS Code and the language server."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -b",
    "watch": "tsc -b -w",
    "postinstall": "cd client && npm install && cd ../server && npm install && cd ..",
    "test": "sh ./scripts/e2e.sh"
  },
  "devDependencies": {
    "@types/node": "^16.18.34",
    "@types/vscode": "^1.100.0",
    "typescript": "^5.1.3"
  }
}